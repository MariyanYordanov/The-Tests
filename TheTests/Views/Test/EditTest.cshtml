@model TestEditModel

@{
    ViewData["Title"] = "Edit Test";
}


@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="container mt-4">
    <h1>Edit Test</h1>
    <form asp-action="EditTest" method="post">
        @Html.AntiForgeryToken()

        <input type="hidden" asp-for="Id" />

        <div class="mb-3">
            <label asp-for="Title" class="form-label">Test Title</label>
            <input asp-for="Title" class="form-control" />
            <span asp-validation-for="Title" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="Description" class="form-label">Test Description</label>
            <textarea asp-for="Description" class="form-control"></textarea>
            <span asp-validation-for="Description" class="text-danger"></span>
        </div>

        <!-- Questions Section -->
        <div id="questions-container">
            @for (int i = 0; i < Model.Questions.Count; i++)
            {
                <div class="card mb-3 question-card">
                    <div class="card-body">
                        <h5>Question @(i + 1)</h5>
                        <input type="hidden" asp-for="Questions[@i].Id" />
                        <div class="mb-3">
                            <label asp-for="Questions[@i].Text" class="form-label">Question Text</label>
                            <input asp-for="Questions[@i].Text" class="form-control" />
                        </div>
                        <div class="mb-3">
                            <label asp-for="Questions[@i].Points" class="form-label">Points</label>
                            <input asp-for="Questions[@i].Points" class="form-control" />
                        </div>
                        <div>
                            <h6>Answers</h6>
                            <div class="answers-container">
                                @for (int j = 0; j < Model.Questions[i].Answers.Count; j++)
                                {
                                    <div class="d-flex align-items-center mb-2 answer-row">
                                        <input type="hidden" asp-for="Questions[@i].Answers[@j].IsCorrect" value="false" />
                                        <input asp-for="Questions[@i].Answers[@j].IsCorrect" type="checkbox" value="true" />
                                        <input asp-for="Questions[@i].Answers[@j].Text" class="form-control me-2" placeholder="Answer text" required />
                                        <button type="button" class="btn btn-danger btn-outline-info">Remove Answer</button>
                                    </div>
                                }
                            </div>
                            <button type="button" class="btn btn-secondary btn-sm add-answer-btn">Add Answer</button>
                        </div>
                        <button type="button" class="btn btn-danger btn-sm remove-question-btn mt-2">Remove Question</button>
                    </div>
                </div>
            }
        </div>

        <div class="mt-3">
            <button type="button" class="btn btn-primary" id="add-question-btn">Add Question</button>
            <button type="submit" class="btn btn-success">Save Changes</button>
        </div>
    </form>
</div>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        const questionsContainer = document.getElementById("questions-container");

        document.getElementById("add-question-btn").addEventListener("click", () => {
            const questionIndex = questionsContainer.children.length;
            const questionCard = `
                    <div class="card mb-3 question-card">
                        <div class="card-body">
                            <h5>Question ${questionIndex + 1}</h5>
                                <input type="hidden" asp-for="Questions[${questionIndex}].Id" value="0" />
                            <div class="mb-3">
                                <label>Question Text</label>
                                    <input type="text" asp-for="Questions[${questionIndex}].Text" class="form-control" required />
                            </div>
                            <div class="mb-3">
                                <label>Points</label>
                                    <input type="number" asp-for="Questions[${questionIndex}].Points" class="form-control" required />
                            </div>
                            <div>
                                <h6>Answers</h6>
                                <div class="answers-container">
                                    <div class="d-flex align-items-center mb-2 answer-row">
                                            <input type="text" asp-for="Questions[${questionIndex}].Answers[0].Text" class="form-control me-2" required />
                                            <input type="checkbox" asp-for="Questions[${questionIndex}].Answers[0].IsCorrect" />
                                        <button type="button" class="btn btn-danger btn-sm remove-answer-btn">Remove Answer</button>
                                    </div>
                                </div>
                                <button type="button" class="btn btn-secondary btn-sm add-answer-btn">Add Answer</button>
                            </div>
                            <button type="button" class="btn btn-danger btn-sm remove-question-btn mt-2">Remove Question</button>
                        </div>
                    </div>
                `;
            questionsContainer.insertAdjacentHTML("beforeend", questionCard);
        });

        document.addEventListener("click", (event) => {
            if (event.target.classList.contains("add-answer-btn")) {
                const answersContainer = event.target.closest(".card-body").querySelector(".answers-container");
                const answerIndex = answersContainer.children.length;
                const questionIndex = Array.from(questionsContainer.children).indexOf(event.target.closest(".question-card"));

                const answerRow = `
                        <div class="d-flex align-items-center mb-2 answer-row">
                                <input type="text" asp-for="Questions[${questionIndex}].Answers[${answerIndex}].Text" class="form-control me-2" required />
                                <input type="checkbox" asp-for="Questions[${questionIndex}].Answers[${answerIndex}].IsCorrect" />
                            <button type="button" class="btn btn-danger btn-sm remove-answer-btn">Remove Answer</button>
                        </div>
                    `;
                answersContainer.insertAdjacentHTML("beforeend", answerRow);
            }

            if (event.target.classList.contains("remove-answer-btn")) {
                event.target.closest(".answer-row").remove();
            }

            if (event.target.classList.contains("remove-question-btn")) {
                event.target.closest(".question-card").remove();

                Array.from(questionsContainer.children).forEach((card, index) => {
                    card.querySelector("h5").textContent = `Question ${index + 1}`;
                    card.querySelectorAll("input[name^='Questions']").forEach(input => {
                        const name = input.getAttribute("name");
                        input.setAttribute("name", name.replace(/Questions\[\d+\]/, `Questions[${index}]`));
                    });
                });
            }
        });
    });
</script>
